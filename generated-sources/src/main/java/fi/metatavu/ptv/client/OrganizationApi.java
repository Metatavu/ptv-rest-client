/*
 * PTV Open Api version 10
 * Here you can see listed all the PTV Open Api methods.
 *
 * OpenAPI spec version: v10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.ptv.client;

import fi.metatavu.ptv.client.model.*;

import fi.metatavu.ptv.client.model.IVmError;
import fi.metatavu.ptv.client.model.V10VmOpenApiOrganization;
import fi.metatavu.ptv.client.model.V3VmOpenApiGuidPage;
import fi.metatavu.ptv.client.model.V8VmOpenApiOrganizationGuidPage;
import fi.metatavu.ptv.client.model.V9VmOpenApiOrganizationIn;
import fi.metatavu.ptv.client.model.V9VmOpenApiOrganizationInBase;
import fi.metatavu.ptv.client.model.VmOpenApiOrganizationHierarchy;
import fi.metatavu.ptv.client.model.VmOpenApiOrganizationSaha;
import fi.metatavu.ptv.client.model.VmOpenApiOrganizationSahaGuidPage;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-08T12:51:13.642+03:00")
public class OrganizationApi {
  
  private ApiClient client;
  private String accessToken;

  public OrganizationApi(ApiClient client, String accessToken) {
    this.client = client;
    this.accessToken = accessToken;
  }
  
  /**
   * Gets all the published organizations within PTV as a list of organization ids and names.  Organizations created/modified after certain date can be fetched by adding date as query string parameter.  Organizations created/modified before certain date can be fetched by adding dateBefore as query string parameter.  Archived items can be fetched by setting status parameter as &#39;Archived&#39; and withdrawn items can be fetched by setting status parameter as &#39;Withdrawn&#39;.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;date\&quot;: [                   \&quot;The value &#39;-2&#39; is not valid for Nullable&#x60;1.\&quot;,                   \&quot;The date parameter is invalid.\&quot;                 ]              }              &lt;/code&gt;
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   * @param status Set status to get items either in published, archived or withdrawn state. (optional, default to Published)
   */
  public ApiResponse<V8VmOpenApiOrganizationGuidPage> get(@com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page, String status) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
if (status != null)
    queryParams.put("status", status);
    
        
    String path = "/api/v10/Organization";
      
    ResultType<V8VmOpenApiOrganizationGuidPage> resultType = new ResultType<V8VmOpenApiOrganizationGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published organizations related to defined area and code.  Organizations created/modified after certain date can be fetched by adding date as query string parameter.  Organizations created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param area The area type. (required)
   * @param code The code related to area (required)
   * @param includeWholeCountry Indicates if organizations marked to provide services for whole country (or whole country except Ã…land) should be included. (optional)
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V8VmOpenApiOrganizationGuidPage> getByArea(String area, String code, Boolean includeWholeCountry, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (includeWholeCountry != null)
    queryParams.put("includeWholeCountry", includeWholeCountry);
if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Organization/area/{area}/code/{code}"
      .replaceAll("\\{" + "area" + "\\}", area)
      .replaceAll("\\{" + "code" + "\\}", code);
      
    ResultType<V8VmOpenApiOrganizationGuidPage> resultType = new ResultType<V8VmOpenApiOrganizationGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to requested organizations.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;id\&quot;: [                   \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                 ]              }              &lt;/code&gt;
   * @param guids Comma separated list of guids. Max 100 can be added into list. (optional)
   */
  public ApiResponse<List<V10VmOpenApiOrganization>> getByIdList(String guids) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (guids != null)
    queryParams.put("guids", guids);
    
        
    String path = "/api/v10/Organization/list";
      
    ResultType<List<V10VmOpenApiOrganization>> resultType = new ResultType<List<V10VmOpenApiOrganization>>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to a single organization with defined Oid.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;oid\&quot;: [                   \&quot;The field oid must match the regular expression &#39;^[A-Za-z0-9.-]*$&#39;.\&quot;                 ]              }              &lt;/code&gt;
   * @param oid Oid identifier (required)
   */
  public ApiResponse<V10VmOpenApiOrganization> getByOid(String oid) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization/oid/{oid}"
      .replaceAll("\\{" + "oid" + "\\}", oid);
      
    ResultType<V10VmOpenApiOrganization> resultType = new ResultType<V10VmOpenApiOrganization>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to organizations with defined business identity code.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;code\&quot;: [                   \&quot;The field code must match the regular expression &#39;^[0-9]{7}-[0-9]{1}$&#39;.\&quot;                 ]              }              &lt;/code&gt;
   * @param code Finnish business identity code (Y-tunnus). (required)
   */
  public ApiResponse<List<V10VmOpenApiOrganization>> getByYCode(String code) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization/businesscode/{code}"
      .replaceAll("\\{" + "code" + "\\}", code);
      
    ResultType<List<V10VmOpenApiOrganization>> resultType = new ResultType<List<V10VmOpenApiOrganization>>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published organizations that do not have a parent organization.  Organizations created/modified after certain date can be fetched by adding date as query string parameter.  Organizations created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> getHierarchy(@com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Organization/Hierarchy";
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Get a single organization hierarchy. Returns the complete hierarchy starting from  the root organization and including all the child and grandchild organizations.
   * 
   * @param id Guid (required)
   */
  public ApiResponse<VmOpenApiOrganizationHierarchy> getHierarchy_0(String id) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization/Hierarchy/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<VmOpenApiOrganizationHierarchy> resultType = new ResultType<VmOpenApiOrganizationHierarchy>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets main organizations and two sub levels of organizations. Returns both published and archived organizations.  NOTE! This is a restricted endpoint.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;date\&quot;: [                   \&quot;The value &#39;-2&#39; is not valid for Nullable&#x60;1.\&quot;,                   \&quot;The date parameter is invalid.\&quot;                 ]              }              &lt;/code&gt;
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC) (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<VmOpenApiOrganizationSahaGuidPage> getSaha(@com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Organization/saha";
      
    ResultType<VmOpenApiOrganizationSahaGuidPage> resultType = new ResultType<VmOpenApiOrganizationSahaGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches Saha related information of a single organization.  NOTE! This is a restricted endpoint.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;id\&quot;: [                   \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                 ]              }              &lt;/code&gt;
   * @param id Guid (required)
   */
  public ApiResponse<VmOpenApiOrganizationSaha> getSaha_0(String id) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization/saha/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<VmOpenApiOrganizationSaha> resultType = new ResultType<VmOpenApiOrganizationSaha>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to a single organization.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;id\&quot;: [                   \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                 ]              }              &lt;/code&gt;
   * @param id Guid (required)
   */
  public ApiResponse<V10VmOpenApiOrganization> get_0(String id) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V10VmOpenApiOrganization> resultType = new ResultType<V10VmOpenApiOrganization>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Creates a new organization with the data provided as input.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;Addresses[1].StreetAddress\&quot;: [                      \&quot;The StreetAddress field is required.\&quot;                  ]              }              &lt;/code&gt;
   * @param request The organization data. (optional)
   */
  public ApiResponse<V10VmOpenApiOrganization> post(V9VmOpenApiOrganizationIn request) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization";
      
    ResultType<V10VmOpenApiOrganization> resultType = new ResultType<V10VmOpenApiOrganization>() {};
    return client.doPOSTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
  /**
   * Updates organization.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;propertyname\&quot;: [                   \&quot;The field propertyname has invalid characters.\&quot;                 ]              }              &lt;/code&gt;
   * @param id organization entity id (required)
   * @param request organization values (optional)
   */
  public ApiResponse<V10VmOpenApiOrganization> put(String id, V9VmOpenApiOrganizationInBase request) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V10VmOpenApiOrganization> resultType = new ResultType<V10VmOpenApiOrganization>() {};
    return client.doPUTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
  /**
   * Updates organization.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                 \&quot;propertyname\&quot;: [                   \&quot;The field propertyname has invalid characters.\&quot;                 ]              }              &lt;/code&gt;
   * @param sourceId organization external id (required)
   * @param request organization values (optional)
   */
  public ApiResponse<V10VmOpenApiOrganization> putBySource(String sourceId, V9VmOpenApiOrganizationInBase request) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Organization/sourceId/{sourceId}"
      .replaceAll("\\{" + "sourceId" + "\\}", sourceId);
      
    ResultType<V10VmOpenApiOrganization> resultType = new ResultType<V10VmOpenApiOrganization>() {};
    return client.doPUTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
}
