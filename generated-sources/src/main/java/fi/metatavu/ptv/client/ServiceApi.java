/*
 * PTV Open Api version 10
 * Here you can see listed all the PTV Open Api methods.
 *
 * OpenAPI spec version: v10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.ptv.client;

import fi.metatavu.ptv.client.model.*;

import fi.metatavu.ptv.client.model.IVmError;
import fi.metatavu.ptv.client.model.V10VmOpenApiService;
import fi.metatavu.ptv.client.model.V3VmOpenApiGuidPage;
import fi.metatavu.ptv.client.model.V9VmOpenApiServiceIn;
import fi.metatavu.ptv.client.model.V9VmOpenApiServiceInBase;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-08T12:51:13.642+03:00")
public class ServiceApi {
  
  private ApiClient client;
  private String accessToken;

  public ServiceApi(ApiClient client, String accessToken) {
    this.client = client;
    this.accessToken = accessToken;
  }
  
  /**
   * Gets all the published services within PTV as a list of service ids and names.  Services created/modified after certain date can be fetched by adding date as query string parameter.  Services created/modified before certain date can be fetched by adding dateBefore as query string parameter.  Archived items can be fetched by setting status parameter as &#39;Archived&#39; and withdrawn items can be fetched by setting status parameter as &#39;Withdrawn&#39;.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;date\&quot;: [                      \&quot;The value &#39;rfsd&#39; is not valid for Nullable&#x60;1.\&quot;,                      \&quot;The date parameter is invalid.\&quot;                  ]              }              &lt;/code&gt;
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   * @param status Set status to get items either in published, archived or withdrawn state. (optional, default to Published)
   */
  public ApiResponse<V3VmOpenApiGuidPage> get(@com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page, String status) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
if (status != null)
    queryParams.put("status", status);
    
        
    String path = "/api/v10/Service";
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets all services within PTV as a list of service ids and names. Also services with draft and modified versions are included.   Services created/modified after certain date can be fetched by adding date as query string parameter.   Services created/modified before certain date can be fetched by adding dateBefore as query string parameter.   NOTE! This is a restricted endpoint.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;date\&quot;: [                      \&quot;The value &#39;rfsd&#39; is not valid for Nullable&#x60;1.\&quot;,                      \&quot;The date parameter is invalid.\&quot;                  ]              }              &lt;/code&gt;
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> getActive(@com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Service/active";
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to a single service. Also services with only draft or modified versions are returned.  NOTE! This is a restricted endpoint.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;id\&quot;: [                      \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                  ]              }              &lt;/code&gt;
   * @param id Guid (required)
   */
  public ApiResponse<V10VmOpenApiService> getActive_0(String id) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Service/active/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V10VmOpenApiService> resultType = new ResultType<V10VmOpenApiService>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published services related to defined area and code.  Services created/modified after certain date can be fetched by adding date as query string parameter.  Services created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param area The area type (required)
   * @param code The code related to area (required)
   * @param includeWholeCountry Indicates if services marked for whole country (or whole country except Ã…land) should be included. (optional)
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> getByArea(String area, String code, Boolean includeWholeCountry, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (includeWholeCountry != null)
    queryParams.put("includeWholeCountry", includeWholeCountry);
if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Service/area/{area}/code/{code}"
      .replaceAll("\\{" + "area" + "\\}", area)
      .replaceAll("\\{" + "code" + "\\}", code);
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to requested services.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;id\&quot;: [                      \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                  ]              }              &lt;/code&gt;
   * @param guids Comma separated list of guids. Max 100 can be added into list. (optional)
   */
  public ApiResponse<List<V10VmOpenApiService>> getByIdList(String guids) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (guids != null)
    queryParams.put("guids", guids);
    
        
    String path = "/api/v10/Service/list";
      
    ResultType<List<V10VmOpenApiService>> resultType = new ResultType<List<V10VmOpenApiService>>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to requestes services.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;id\&quot;: [                      \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                  ]              }              &lt;/code&gt;
   * @param guids Comma separated list of guids. Max 100 can be added into list. (optional)
   */
  public ApiResponse<List<V10VmOpenApiService>> getByIdListWithGdData(String guids) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (guids != null)
    queryParams.put("guids", guids);
    
        
    String path = "/api/v10/Service/serviceWithGD/list";
      
    ResultType<List<V10VmOpenApiService>> resultType = new ResultType<List<V10VmOpenApiService>>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published services for defined service channel.  Services joined to service channel after certain date can be fetched by adding date as query string parameter.  Services joined to service channel before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param serviceChannelId Guid (required)
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> getByServiceChannel(String serviceChannelId, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Service/serviceChannel/{serviceChannelId}"
      .replaceAll("\\{" + "serviceChannelId" + "\\}", serviceChannelId);
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published services for defined service class.  Services created/modified after certain date can be fetched by adding date as query string parameter.  Services created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param uri Service class uri, e.g. http://urn.fi/URN:NBN:fi:au:ptvl:v1065 (optional)
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> getByServiceClass(String uri, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (uri != null)
    queryParams.put("uri", uri);
if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Service/serviceClass";
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published services for defined target group.  Services created/modified after certain date can be fetched by adding date as query string parameter.  Services created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param uri Service class uri, e.g. http://urn.fi/URN:NBN:fi:au:ptvl:v1065 (optional)
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> getByTargetGroup(String uri, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (uri != null)
    queryParams.put("uri", uri);
if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Service/targetGroup";
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published services of defined service type.  Services created/modified after certain date can be fetched by adding date as query string parameter.  Services created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param type Service type (required)
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> getByType(String type, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Service/type/{type}"
      .replaceAll("\\{" + "type" + "\\}", type);
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to a single service. If general description is attached also general description data is returned within the service data.  General description related descriptions are marked with prefix &#39;GD_&#39; to separate them from service related desciptions.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;id\&quot;: [                      \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                  ]              }              &lt;/code&gt;
   * @param id Guid (required)
   */
  public ApiResponse<V10VmOpenApiService> getWithGdData(String id) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Service/serviceWithGD/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V10VmOpenApiService> resultType = new ResultType<V10VmOpenApiService>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to a single service.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;id\&quot;: [                      \&quot;Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).\&quot;                  ]              }              &lt;/code&gt;
   * @param id Guid (required)
   */
  public ApiResponse<V10VmOpenApiService> get_0(String id) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v10/Service/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V10VmOpenApiService> resultType = new ResultType<V10VmOpenApiService>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Creates a new service with the data provided as input.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;ServiceNames\&quot;: [                      \&quot;Type - Required value &#39;Name&#39; was not found!\&quot;                  ]              }              &lt;/code&gt;
   * @param request The service data. (optional)
   * @param attachProposedChannels Indicates if service channels attached into general description should automatically be attached into the service. (optional)
   */
  public ApiResponse<V10VmOpenApiService> post(V9VmOpenApiServiceIn request, Boolean attachProposedChannels) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (attachProposedChannels != null)
    queryParams.put("attachProposedChannels", attachProposedChannels);
    
        
    String path = "/api/v10/Service";
      
    ResultType<V10VmOpenApiService> resultType = new ResultType<V10VmOpenApiService>() {};
    return client.doPOSTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
  /**
   * Updates the defined service with the data provided as input.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;ServiceNames[0].Type\&quot;: [                      \&quot;The Type field is required.\&quot;                  ]              }              &lt;/code&gt;
   * @param id Service identifier (required)
   * @param request The service data (optional)
   * @param attachProposedChannels Indicates if service channels attached into general description should automatically be attached into the service. (optional)
   */
  public ApiResponse<V10VmOpenApiService> put(String id, V9VmOpenApiServiceInBase request, Boolean attachProposedChannels) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (attachProposedChannels != null)
    queryParams.put("attachProposedChannels", attachProposedChannels);
    
        
    String path = "/api/v10/Service/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V10VmOpenApiService> resultType = new ResultType<V10VmOpenApiService>() {};
    return client.doPUTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
  /**
   * Updates the defined service with the data provided as input.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;ServiceNames[0].Type\&quot;: [                      \&quot;The Type field is required.\&quot;                  ]              }              &lt;/code&gt;
   * @param sourceId External source identifier (required)
   * @param request The service data (optional)
   * @param attachProposedChannels Indicates if service channels attached into general description should automatically be attached into the service. (optional)
   */
  public ApiResponse<V10VmOpenApiService> putBySource(String sourceId, V9VmOpenApiServiceInBase request, Boolean attachProposedChannels) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (attachProposedChannels != null)
    queryParams.put("attachProposedChannels", attachProposedChannels);
    
        
    String path = "/api/v10/Service/sourceId/{sourceId}"
      .replaceAll("\\{" + "sourceId" + "\\}", sourceId);
      
    ResultType<V10VmOpenApiService> resultType = new ResultType<V10VmOpenApiService>() {};
    return client.doPUTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
}
