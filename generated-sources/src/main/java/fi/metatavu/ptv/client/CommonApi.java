/*
 * PTV Open Api version 10
 * Here you can see listed all the PTV Open Api methods.
 *
 * OpenAPI spec version: v10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.ptv.client;

import fi.metatavu.ptv.client.model.*;

import fi.metatavu.ptv.client.model.IVmError;
import fi.metatavu.ptv.client.model.VmOpenApiEntityGuidPage;
import fi.metatavu.ptv.client.model.VmOpenApiTasks;
import fi.metatavu.ptv.client.model.VmOpenApiTranslationItemsPage;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-08T12:51:13.642+03:00")
public class CommonApi {
  
  private ApiClient client;
  private String accessToken;

  public CommonApi(ApiClient client, String accessToken) {
    this.client = client;
    this.accessToken = accessToken;
  }
  
  /**
   * Gets information of user&#39;s organization&#39;s channels that have no connections to services.
   * 
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<VmOpenApiTasks> getChannelsWithoutServices(Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Common/ChannelsWithoutServices";
      
    ResultType<VmOpenApiTasks> resultType = new ResultType<VmOpenApiTasks>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets information of user&#39;s organization&#39;s expiring service channels.
   * 
   * @param page The page number to be fetched. (optional, default to 1)
   * @param status Set status to get items either in published or draft state. (optional, default to Published)
   */
  public ApiResponse<VmOpenApiTasks> getExpiringServiceChannels(Integer page, String status) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (page != null)
    queryParams.put("page", page);
if (status != null)
    queryParams.put("status", status);
    
        
    String path = "/api/v10/Common/ExpiringServiceChannels";
      
    ResultType<VmOpenApiTasks> resultType = new ResultType<VmOpenApiTasks>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets information of user&#39;s organization&#39;s expiring services.
   * 
   * @param page The page number to be fetched. (optional, default to 1)
   * @param status Set status to get items either in published or draft state. (optional, default to Published)
   */
  public ApiResponse<VmOpenApiTasks> getExpiringServices(Integer page, String status) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (page != null)
    queryParams.put("page", page);
if (status != null)
    queryParams.put("status", status);
    
        
    String path = "/api/v10/Common/ExpiringServices";
      
    ResultType<VmOpenApiTasks> resultType = new ResultType<VmOpenApiTasks>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets a list of published services and service channels by organization.  Services/channels created/modified after certain date can be fetched by adding date as query string parameter.  Services/channels created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param organizationId Guid (required)
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<VmOpenApiEntityGuidPage> getServicesAndChannels(String organizationId, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Common/EntitiesByOrganization/{organizationId}"
      .replaceAll("\\{" + "organizationId" + "\\}", organizationId);
      
    ResultType<VmOpenApiEntityGuidPage> resultType = new ResultType<VmOpenApiEntityGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets information of user&#39;s organization&#39;s services that have no connections to channels.
   * 
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<VmOpenApiTasks> getServicesWithoutChannels(Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Common/ServicesWithoutChannels";
      
    ResultType<VmOpenApiTasks> resultType = new ResultType<VmOpenApiTasks>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Gets information of translation processes within PTV.  Translation items created/modified after certain date can be fetched by adding date as query string parameter.  Translation items created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * 
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page number to be fetched. (optional, default to 1)
   */
  public ApiResponse<VmOpenApiTranslationItemsPage> getTranslationStatistics(@com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v10/Common/Translation";
      
    ResultType<VmOpenApiTranslationItemsPage> resultType = new ResultType<VmOpenApiTranslationItemsPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
}
