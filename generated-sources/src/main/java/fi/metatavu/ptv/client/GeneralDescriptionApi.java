/*
 * PTV Open Api version 9
 * Here you can see listed all the PTV Open Api methods.
 *
 * OpenAPI spec version: v9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.ptv.client;

import fi.metatavu.ptv.client.model.*;

import fi.metatavu.ptv.client.model.IVmError;
import fi.metatavu.ptv.client.model.V3VmOpenApiGuidPage;
import fi.metatavu.ptv.client.model.V9VmOpenApiGeneralDescription;
import fi.metatavu.ptv.client.model.V9VmOpenApiGeneralDescriptionIn;
import fi.metatavu.ptv.client.model.V9VmOpenApiGeneralDescriptionInBase;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-05T18:15:03.681+03:00")
public class GeneralDescriptionApi {
  
  private ApiClient client;
  private String accessToken;

  public GeneralDescriptionApi(ApiClient client, String accessToken) {
    this.client = client;
    this.accessToken = accessToken;
  }
  
  /**
   * Fetches all the information related to a single statutory service general description.
   * 
   * @param id Statutory service general description guid (id of the entity) to fetch. (required)
   */
  public ApiResponse<V9VmOpenApiGeneralDescription> apiV9GeneralDescriptionByIdGet(String id) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v9/GeneralDescription/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V9VmOpenApiGeneralDescription> resultType = new ResultType<V9VmOpenApiGeneralDescription>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Updates the defined general description with the data provided as input.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;Names\&quot;: [                      \&quot;Type - Required value &#39;Name&#39; was not found!\&quot;                  ]              }              &lt;/code&gt;
   * @param id Statutory service general description identifier (required)
   * @param request The general description data. (optional)
   */
  public ApiResponse<V9VmOpenApiGeneralDescription> apiV9GeneralDescriptionByIdPut(String id, V9VmOpenApiGeneralDescriptionInBase request) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v9/GeneralDescription/{id}"
      .replaceAll("\\{" + "id" + "\\}", id);
      
    ResultType<V9VmOpenApiGeneralDescription> resultType = new ResultType<V9VmOpenApiGeneralDescription>() {};
    return client.doPUTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
  /**
   * Gets all the statutory service general descriptions within PTV as a list of ids and names.  General descriptions created/modified after certain date can be fetched by adding date as query string parameter.  General descriptions created/modified before certain date can be fetched by adding dateBefore as query string parameter.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;Names\&quot;: [                      \&quot;Type - Required value &#39;Name&#39; was not found!\&quot;                  ]              }              &lt;/code&gt;
   * @param date Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param dateBefore Supports only format \&quot;yyyy-MM-ddTHH:mm:ss\&quot; (UTC). (optional)
   * @param page The page to be fetched. Page numbering starts from one. (optional, default to 1)
   */
  public ApiResponse<V3VmOpenApiGuidPage> apiV9GeneralDescriptionGet(@com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime date, @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.OffsetDateTimeSerializer.class) @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = fi.metatavu.ptv.client.OffsetDateTimeDeserializer.class) java.time.OffsetDateTime dateBefore, Integer page) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (date != null)
    queryParams.put("date", date);
if (dateBefore != null)
    queryParams.put("dateBefore", dateBefore);
if (page != null)
    queryParams.put("page", page);
    
        
    String path = "/api/v9/GeneralDescription";
      
    ResultType<V3VmOpenApiGuidPage> resultType = new ResultType<V3VmOpenApiGuidPage>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Fetches all the information related to requested statutory service general descriptions.
   * 
   * @param guids Comma separated list of guids. Max 100 can be added into list. (optional)
   */
  public ApiResponse<List<V9VmOpenApiGeneralDescription>> apiV9GeneralDescriptionListGet(String guids) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (guids != null)
    queryParams.put("guids", guids);
    
        
    String path = "/api/v9/GeneralDescription/list";
      
    ResultType<List<V9VmOpenApiGeneralDescription>> resultType = new ResultType<List<V9VmOpenApiGeneralDescription>>() {};
    return client.doGETRequest(this.accessToken, path, resultType, queryParams, formParams);
  }
  /**
   * Creates a new general description with the data provided as input.
   * &lt;para&gt;HTTP status code 400 response model is a dictionary where key is property name and value is a list of error messages. Below sample response.&lt;/para&gt;  &lt;code&gt;              {                  \&quot;Names\&quot;: [                      \&quot;Type - Required value &#39;Name&#39; was not found!\&quot;                  ]              }              &lt;/code&gt;
   * @param request The general description data. (optional)
   */
  public ApiResponse<V9VmOpenApiGeneralDescription> apiV9GeneralDescriptionPost(V9VmOpenApiGeneralDescriptionIn request) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
        
        
    String path = "/api/v9/GeneralDescription";
      
    ResultType<V9VmOpenApiGeneralDescription> resultType = new ResultType<V9VmOpenApiGeneralDescription>() {};
    return client.doPOSTRequest(this.accessToken, path, resultType, queryParams, formParams,request);
  }
}
